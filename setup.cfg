[metadata]
name = locan
url = https://github.com/super-resolution/locan
download_url = https://github.com/super-resolution/locan
https://github.com/super-resolution/Locan.git
license = BSD 3-Clause
license_files = LICENSE.md
description = Analysis software for single-molecule localization microscopy
long_description = file: README.md
long_description_content_type = text/markdown
keywords = fluorescence super-resolution single-molecule localization microscopy smlm storm dstorm palm paint
author = Locan Developers
author_email =
classifiers =
    Environment :: Console
    Development Status :: 3 - Alpha
    Intended Audience :: Education
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Programming Language :: C
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Operating System :: Microsoft :: Windows
    Operating System :: POSIX
    Operating System :: Unix
    Operating System :: MacOS
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Bio-Informatics

[options]
zip_safe = False
packages = find:
python_requires = >=3.7
include_package_data = True
install_requires =
    asdf
    tifffile
    ruamel.yaml
    fast-histogram
    boost-histogram
    lmfit
    protobuf
    shapely
    networkx
    scikit-learn
    scikit-image
    matplotlib
    scipy
    pandas
    numpy> 1.17.0
    tqdm
    numba
    cython

# for explanation of %(extra)s syntax see:
# https://github.com/pypa/setuptools/issues/1260#issuecomment-438187625
# this syntax may change in the future
# keep in sync with EXTRAS_REQUIRE in locan.dependencies
[options.extras_require]
test =
    pytest
    pytest-qt
    %(pyqt5)s
pyside2 =
    PySide2
pyqt5 =
    PyQt5
color =
    colorcet
track =
    trackpy
register =
    open3d!=0.12.0
napari =
    napari
scatter_density =
    mpl_scatter_density
html =
    requests
hdf5 =
    h5py
hdbscan =
    hdbscan
all =
    %(pyqt5)s
    %(test)s
    %(color)s
    %(track)s
    %(register)s
    %(napari)s
    %(scatter_density)s
    %(html)s
    %(hdf5)s
    %(hdbscan)s
gpu =
    cupy
docs =
    sphinx
    ipython
    myst-nb
    sphinx-copybutton
    sphinx_rtd_theme
    furo
dev =
    %(all)s
    %(docs)s
    coverage
    build
    twine

[options.entry_points]
console_scripts =
    locan = locan.__main__:main

[coverage:run]
include = locan/*
omit =
    locan/tests/*
    locan/scripts/*
    locan/__main__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
