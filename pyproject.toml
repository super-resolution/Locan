[build-system]
requires = [
    "setuptools>=64",
    "setuptools_scm[toml]>=8"
    ]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
locan = ["py.typed", "*.pyi"]

[tool.setuptools_scm]
version_file = "src/locan/_version.py"
version_scheme = "release-branch-semver"
fallback_version = "0.19-fallback"

[project]
name = "locan"
description = "Analysis software for single-molecule localization microscopy"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE.md"}
authors = [
  {name = "Locan Developers"},
]
maintainers = [
  {name = "SÃ¶ren Doose"}
]
keywords = [
    "fluorescence", "super-resolution", " single-molecule localization microscopy",
    "smlm", "storm", "dstorm", "palm", "paint"
]
classifiers = [
    "Environment :: Console",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: C",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
dynamic = ["version"]
dependencies = [
    "asdf",
    "tifffile",
    "ruamel.yaml",
    "fast-histogram",
    "boost-histogram",
    "lmfit",
    "protobuf",
    "shapely!=2.0.0,!=2.0.1",
    "networkx",
    "scikit-learn",
    "scikit-image",
    "matplotlib",
    "scipy",
    "pandas",
    "numpy>1.20.0",
    "tqdm",
    "cython",
    "tomli>=1.1.0; python_version<'3.11'",
    "qtpy!=2.3.0",
    "typing_extensions",
    "lazy_loader>=0.3",
]

[project.optional-dependencies]
test = [
    "pytest",
]
test-qt = [
    "pytest",
    "PyQt5",
    "pytest-qt;python_version<'3.11'"
]
pyside2 = ["PySide2"]
pyqt5 = ["PyQt5"]
color = ["colorcet"]
track = ["trackpy"]
register = [
    "open3d-cpu!=0.12.0; platform_system=='Linux' and python_version<'3.11'",
    "open3d!=0.12.0; platform_system!='Linux' and python_version<'3.11'"]
napari = ["napari"]
scatter_density = ["mpl_scatter_density"]
html = ["requests"]
hdf5 = ["h5py"]
hdbscan = ["hdbscan"]
all = [
    "PyQt5",
    "locan[test]",
    "colorcet",
    "trackpy",
    "locan[register]",
    "napari",
    "mpl_scatter_density",
    "requests",
    "h5py",
    "hdbscan"
]
gpu = [
    "cupy",
    "open3d!=0.12.0; python_version<'3.11'"
]
docs = [
    "sphinx",
    "ipython",
    "myst-nb",
    "sphinx-copybutton",
    "sphinx_rtd_theme",
    "sphinx_autodoc_typehints",
    "furo",
    "ray",
]
dev = [
    "locan[test]",
    "coverage[toml]",
    "build",
    "twine",
    "black~=23.0",
    "pre-commit",
    "asv",
    "ruff",
    "mypy",
    "numpy>1.20.0",  # required by mypy
    "types-protobuf",  # required by mypy
    "types-requests",  # required by mypy
    "types-tqdm",  # required by mypy
    "pandas-stubs",  # required by mypy
]

[project.urls]
homepage = "https://github.com/super-resolution/locan"
documentation = "https://locan.readthedocs.io/"
repository = "https://github.com/super-resolution/locan"
issues = "https://github.com/super-resolution/locan/issues"
changelog = "https://github.com/super-resolution/locan"

[project.scripts]
locan = "locan.__main__:main"


[tool.black]
line_length = 88

[tool.pytest.ini_options]
filterwarnings = [
    "ignore:RoiLegacy.to_yaml is deprecated*:DeprecationWarning",
    "ignore::DeprecationWarning:hdbscan",
]
addopts = "-m 'not gui and not visual'"
markers = [
    "gui: marks tests that require user interaction (skipped by default)",
    "visual: marks tests that require visual inspection (skipped by default)",
]

[tool.coverage.run]
include = [
    "src/locan/*"
]
omit = [
    "locan/tests/*",
    "locan/scripts/*",
    "locan/__main__.py",
    "locan/data/metadata_pb2.py",
    "locan/data/metadata_pb2.pyi",
    "locan/analysis/metadata_analysis_pb2.py",
    "locan/analysis/metadata_analysis_pb2.pyi",
    "locan/locan_io/locdata/manifest_pb2.py",
    "locan/locan_io/locdata/manifest_pb2.pyi",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
line-length = 88
show-source = false
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "Q",  # flake8-quotes
    "YTT",  # flake8-2020
    "S",  # flake8-bandit
    "UP",  # pyupgrade
    "BLE",  # flake8-blind-exception
    "ISC",  # flake8-implicit-str-concat
    "NPY",  # numpy-specific rules
    # "PT", # flake8-pytest-style
]
# Rules - https://github.com/charliermarsh/ruff#reference:
# B905 `zip()` without an explicit `strict=` parameter - should be used from py310.
# E402 module-import-not-at-top-of-file
# E501 line-too-long
# F403 import-star-used
# F405 undefined-local-with-import-star-usage
# I001 unsorted-imports
# Q000 bad-quotes-inline-string
# S101 assert
# S307 suspicious-eval-usage
# S605 start-process-with-a-shell
# S607 start-process-with-partial-path
ignore = ["E501", "B905"]
# automatically exclude files that are ignored by .gitignore
exclude = [
    ".*",
    "dist",
    "docs",
    "docker",
    "*/*_pb2.py",
    "*/*_pb2.pyi",
    "src/locan/_version.py",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402", "F401", "F403", "F405", "I001"]
"__init__.pyi" = ["E401", "F401", "I001"]
"test_*.py" = ["S101", "S307", "S605", "S607"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.flake8-import-conventions]
[tool.ruff.flake8-import-conventions.aliases]
numpy = "np"
pandas = "pd"
matplotlib = "mpl"
"matplotlib.pyplot" = "plt"
open3d = "o3d"
scipy = "sp"
networkx = "nx"
boost_histogram = "bh"

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.mypy]
plugins = ['numpy.typing.mypy_plugin']
files = ["src"]
strict = true

# warn-unused-ignores is not quite reproducible
warn_unused_ignores = false

# exclude autogenerated protobuf files
[[tool.mypy.overrides]]
module = [
    'locan.analysis.metadata_analysis_pb2',
    'locan.data.metadata_pb2',
    'locan.locan_io.locdata.manifest_pb2',
]
ignore_errors = true

# all attr-defined errors are due to star imports
[[tool.mypy.overrides]]
module = [
    'locan.tests.*',
]
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disable_error_code = ["attr-defined"]

[[tool.mypy.overrides]]
module = [
    'asdf',
    'colorcet',
    'fast_histogram',
    'h5py',
    'hdbscan',
    'lmfit.*',
    'mpl_scatter_density',
    'napari',
    'networkx',
    'open3d',
    'scipy.*',
    'shapely.*',
    'sklearn.*',
    'trackpy',
    'vispy',
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    'locan.visualize.transform',
    'locan.analysis.nearest_neighbor',
    'locan.analysis.localization_precision',
]
disallow_subclassing_any = false
